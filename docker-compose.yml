version: '3.8'

services:
  mongo:
    image: mongo:6
    container_name: dashdig-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: dashdig
    volumes:
      - mongo-data:/data/db
    networks:
      - dashdig-network

  redis:
    image: redis:7-alpine
    container_name: dashdig-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - dashdig-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dashdig-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password@mongo:27017/dashdig?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      BASE_URL: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
    depends_on:
      - mongo
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - dashdig-network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dashdig-frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - dashdig-network
    command: npm run dev

volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local

networks:
  dashdig-network:
    driver: bridge
